namespace SmartStore.Data.Migrations
{
    using System;
    using System.Data.Entity.Migrations;
    
    public partial class UpdateToMySQL : DbMigration
    {
        public override void Up()
        {
            DropIndex("dbo.Customer", "IX_Customer_CreatedOn");
            DropIndex("dbo.Customer", "IX_Customer_LastActivity");
            DropIndex("dbo.Customer", "IX_Customer_BirthDate");
            DropIndex("dbo.Picture", "IX_UpdatedOn_IsTransient");
            //DropIndex("dbo.ProductVariantAttributeValue", "IX_ProductVariantAttributeValue_ProductVariantAttributeId_DisplayOrder"); not found
            DropIndex("dbo.ProductVariantAttributeValue", new[] { "Name" });
            DropIndex("dbo.Download", "IX_UpdatedOn_IsTransient");
            DropIndex("dbo.Forums_Post", new[] { "CreatedOnUtc" });
            DropIndex("dbo.Forums_Topic", new[] { "TopicTypeId", "LastPostTime" });
            DropIndex("dbo.Forums_Topic", new[] { "CreatedOnUtc" });
            DropIndex("dbo.WalletHistory", "IX_StoreId_CreatedOn");
            DropIndex("dbo.ScheduleTaskHistory", "IX_Started_Finished");
            DropIndex("dbo.ScheduleTask", "IX_NextRun_Enabled");
            AlterColumn("dbo.Topic", "SystemName", c => c.String(unicode: false));
            AlterColumn("dbo.Topic", "Password", c => c.String(unicode: false));
            AlterColumn("dbo.Topic", "Title", c => c.String(unicode: false));
            AlterColumn("dbo.Topic", "Body", c => c.String(unicode: false));
            AlterColumn("dbo.Topic", "MetaKeywords", c => c.String(unicode: false));
            AlterColumn("dbo.Topic", "MetaDescription", c => c.String(unicode: false));
            AlterColumn("dbo.Topic", "MetaTitle", c => c.String(unicode: false));
            AlterColumn("dbo.Topic", "WidgetZone", c => c.String(unicode: false));
            AlterColumn("dbo.Topic", "TitleTag", c => c.String(unicode: false));
            AlterColumn("dbo.Setting", "Value", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.LocalizedProperty", "LocaleValue", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.LocaleStringResource", "ResourceValue", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.PermissionRecord", "Name", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.Poll", "Name", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.Poll", "SystemKeyword", c => c.String(unicode: false));
            AlterColumn("dbo.Poll", "StartDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Poll", "EndDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.PollAnswer", "Name", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.CustomerContent", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.CustomerContent", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.BlogComment", "CommentText", c => c.String(unicode: false));
            AlterColumn("dbo.ProductReview", "Title", c => c.String(unicode: false));
            AlterColumn("dbo.ProductReview", "ReviewText", c => c.String(unicode: false));
            AlterColumn("dbo.NewsComment", "CommentTitle", c => c.String(unicode: false));
            AlterColumn("dbo.NewsComment", "CommentText", c => c.String(unicode: false));
            AlterColumn("dbo.Customer", "AdminComment", c => c.String(unicode: false));
            AlterColumn("dbo.Customer", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Customer", "LastLoginDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Customer", "LastActivityDateUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Customer", "BirthDate", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Address", "Salutation", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "Title", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "FirstName", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "LastName", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "Email", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "Company", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "City", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "Address1", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "Address2", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "ZipPostalCode", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "PhoneNumber", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "FaxNumber", c => c.String(unicode: false));
            AlterColumn("dbo.Address", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Country", "AddressFormat", c => c.String(unicode: false));
            AlterColumn("dbo.BlogPost", "Title", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.BlogPost", "Body", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.BlogPost", "Tags", c => c.String(unicode: false));
            AlterColumn("dbo.BlogPost", "StartDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.BlogPost", "EndDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.BlogPost", "MetaDescription", c => c.String(unicode: false));
            AlterColumn("dbo.BlogPost", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Product", "ShortDescription", c => c.String(unicode: false));
            AlterColumn("dbo.Product", "FullDescription", c => c.String(unicode: false));
            AlterColumn("dbo.Product", "AdminComment", c => c.String(unicode: false));
            AlterColumn("dbo.Product", "MetaDescription", c => c.String(unicode: false));
            AlterColumn("dbo.Product", "UserAgreementText", c => c.String(unicode: false));
            AlterColumn("dbo.Product", "SpecialPriceStartDateTimeUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Product", "SpecialPriceEndDateTimeUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Product", "AvailableStartDateTimeUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Product", "AvailableEndDateTimeUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Product", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Product", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Discount", "StartDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Discount", "EndDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Category", "Description", c => c.String(unicode: false));
            AlterColumn("dbo.Category", "BottomDescription", c => c.String(unicode: false));
            AlterColumn("dbo.Category", "BadgeText", c => c.String(unicode: false));
            AlterColumn("dbo.Category", "MetaDescription", c => c.String(unicode: false));
            AlterColumn("dbo.Category", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Category", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Category", "DefaultViewMode", c => c.String(unicode: false));
            AlterColumn("dbo.Picture", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Manufacturer", "Description", c => c.String(unicode: false));
            AlterColumn("dbo.Manufacturer", "MetaDescription", c => c.String(unicode: false));
            AlterColumn("dbo.Manufacturer", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Manufacturer", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.DiscountRequirement", "DiscountRequirementRuleSystemName", c => c.String(unicode: false));
            AlterColumn("dbo.DiscountRequirement", "RestrictedProductIds", c => c.String(unicode: false));
            AlterColumn("dbo.DiscountRequirement", "RestrictedPaymentMethods", c => c.String(unicode: false));
            AlterColumn("dbo.DiscountRequirement", "RestrictedShippingOptions", c => c.String(unicode: false));
            AlterColumn("dbo.DiscountRequirement", "ExtraData", c => c.String(unicode: false));
            AlterColumn("dbo.ProductBundleItem", "ShortDescription", c => c.String(unicode: false));
            AlterColumn("dbo.ProductBundleItem", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ProductBundleItem", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.SpecificationAttributeOption", "Name", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.SpecificationAttribute", "Name", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.ProductVariantAttributeCombination", "AttributesXml", c => c.String(unicode: false));
            AlterColumn("dbo.Product_ProductAttribute_Mapping", "TextPrompt", c => c.String(unicode: false));
            AlterColumn("dbo.ProductAttribute", "Name", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.ProductAttribute", "Description", c => c.String(unicode: false));
            AlterColumn("dbo.ProductAttribute", "ExportMappings", c => c.String(unicode: false));
            AlterColumn("dbo.ProductVariantAttributeValue", "Name", c => c.String(unicode: false));
            AlterColumn("dbo.Download", "DownloadUrl", c => c.String(unicode: false));
            AlterColumn("dbo.Download", "ContentType", c => c.String(unicode: false));
            AlterColumn("dbo.Download", "Filename", c => c.String(unicode: false));
            AlterColumn("dbo.Download", "Extension", c => c.String(unicode: false));
            AlterColumn("dbo.Download", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Download", "Changelog", c => c.String(unicode: false));
            AlterColumn("dbo.Forums_Post", "Text", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.Forums_Post", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Forums_Post", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Forums_Topic", "LastPostTime", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Forums_Topic", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Forums_Topic", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Forums_Forum", "Description", c => c.String(unicode: false));
            AlterColumn("dbo.Forums_Forum", "LastPostTime", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Forums_Forum", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Forums_Forum", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Forums_Group", "Description", c => c.String(unicode: false));
            AlterColumn("dbo.Forums_Group", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Forums_Group", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.News", "Title", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.News", "Short", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.News", "Full", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.News", "StartDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.News", "EndDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.News", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.News", "MetaDescription", c => c.String(unicode: false));
            AlterColumn("dbo.ExternalAuthenticationRecord", "Email", c => c.String(unicode: false));
            AlterColumn("dbo.ExternalAuthenticationRecord", "ExternalIdentifier", c => c.String(unicode: false));
            AlterColumn("dbo.ExternalAuthenticationRecord", "ExternalDisplayIdentifier", c => c.String(unicode: false));
            AlterColumn("dbo.ExternalAuthenticationRecord", "OAuthToken", c => c.String(unicode: false));
            AlterColumn("dbo.ExternalAuthenticationRecord", "OAuthAccessToken", c => c.String(unicode: false));
            AlterColumn("dbo.ExternalAuthenticationRecord", "ProviderSystemName", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "OrderNumber", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "PaymentMethodSystemName", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CustomerCurrencyCode", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "VatNumber", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "TaxRates", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CheckoutAttributeDescription", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CheckoutAttributesXml", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CustomerIp", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CardType", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CardName", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CardNumber", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "MaskedCreditCardNumber", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CardCvv2", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CardExpirationMonth", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CardExpirationYear", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "DirectDebitAccountHolder", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "DirectDebitAccountNumber", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "DirectDebitBankCode", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "DirectDebitBankName", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "DirectDebitBIC", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "DirectDebitCountry", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "DirectDebitIban", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CustomerOrderComment", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "AuthorizationTransactionId", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "AuthorizationTransactionCode", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "AuthorizationTransactionResult", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CaptureTransactionId", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CaptureTransactionResult", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "SubscriptionTransactionId", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "PurchaseOrderNumber", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "PaidDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Order", "ShippingMethod", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "ShippingRateComputationMethodSystemName", c => c.String(unicode: false));
            AlterColumn("dbo.Order", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Order", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.DiscountUsageHistory", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.GiftCardUsageHistory", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.GiftCard", "GiftCardCouponCode", c => c.String(unicode: false));
            AlterColumn("dbo.GiftCard", "RecipientName", c => c.String(unicode: false));
            AlterColumn("dbo.GiftCard", "RecipientEmail", c => c.String(unicode: false));
            AlterColumn("dbo.GiftCard", "SenderName", c => c.String(unicode: false));
            AlterColumn("dbo.GiftCard", "SenderEmail", c => c.String(unicode: false));
            AlterColumn("dbo.GiftCard", "Message", c => c.String(unicode: false));
            AlterColumn("dbo.GiftCard", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.OrderItem", "AttributeDescription", c => c.String(unicode: false));
            AlterColumn("dbo.OrderItem", "AttributesXml", c => c.String(unicode: false));
            AlterColumn("dbo.OrderItem", "BundleData", c => c.String(unicode: false));
            AlterColumn("dbo.OrderNote", "Note", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.OrderNote", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.RewardPointsHistory", "Message", c => c.String(unicode: false));
            AlterColumn("dbo.RewardPointsHistory", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Shipment", "TrackingNumber", c => c.String(unicode: false));
            AlterColumn("dbo.Shipment", "ShippedDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Shipment", "DeliveryDateUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Shipment", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.WalletHistory", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ReturnRequest", "ReasonForReturn", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.ReturnRequest", "RequestedAction", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.ReturnRequest", "RequestedActionUpdatedOnUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.ReturnRequest", "CustomerComments", c => c.String(unicode: false));
            AlterColumn("dbo.ReturnRequest", "StaffNotes", c => c.String(unicode: false));
            AlterColumn("dbo.ReturnRequest", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ReturnRequest", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ShoppingCartItem", "AttributesXml", c => c.String(unicode: false));
            AlterColumn("dbo.ShoppingCartItem", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ShoppingCartItem", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.CheckoutAttribute", "TextPrompt", c => c.String(unicode: false));
            AlterColumn("dbo.RecurringPaymentHistory", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.RecurringPayment", "StartDateUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.RecurringPayment", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ActivityLog", "Comment", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.ActivityLog", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Log", "FullMessage", c => c.String(unicode: false));
            AlterColumn("dbo.Log", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ShippingMethod", "Description", c => c.String(unicode: false));
            AlterColumn("dbo.GenericAttribute", "Value", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.Store", "HtmlBodyId", c => c.String(unicode: false));
            AlterColumn("dbo.Currency", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Currency", "UpdatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ScheduleTaskHistory", "StartedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ScheduleTaskHistory", "FinishedOnUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.ScheduleTaskHistory", "SucceededOnUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.ScheduleTask", "NextRunUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.QueuedEmail", "Body", c => c.String(unicode: false));
            AlterColumn("dbo.QueuedEmail", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.QueuedEmail", "SentOnUtc", c => c.DateTime(precision: 0));
            AlterColumn("dbo.Campaign", "Name", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.Campaign", "Subject", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.Campaign", "Body", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.Campaign", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.MessageTemplate", "LastModelTree", c => c.String(unicode: false));
            AlterColumn("dbo.MessageTemplate", "Body", c => c.String(unicode: false));
            AlterColumn("dbo.NewsLetterSubscription", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Forums_Subscription", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.Forums_PrivateMessage", "Text", c => c.String(nullable: false, unicode: false));
            AlterColumn("dbo.Forums_PrivateMessage", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ImportProfile", "FileTypeConfiguration", c => c.String(unicode: false));
            AlterColumn("dbo.ImportProfile", "ExtraData", c => c.String(unicode: false));
            AlterColumn("dbo.ImportProfile", "ColumnMapping", c => c.String(unicode: false));
            AlterColumn("dbo.ImportProfile", "ResultInfo", c => c.String(unicode: false));
            AlterColumn("dbo.SyncMapping", "CustomString", c => c.String(unicode: false));
            AlterColumn("dbo.SyncMapping", "SyncedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            AlterColumn("dbo.ExportDeployment", "ResultInfo", c => c.String(unicode: false));
            AlterColumn("dbo.ExportProfile", "Filtering", c => c.String(unicode: false));
            AlterColumn("dbo.ExportProfile", "Projection", c => c.String(unicode: false));
            AlterColumn("dbo.ExportProfile", "ProviderConfigData", c => c.String(unicode: false));
            AlterColumn("dbo.ExportProfile", "ResultInfo", c => c.String(unicode: false));
            AlterColumn("dbo.BackInStockSubscription", "CreatedOnUtc", c => c.DateTime(nullable: false, precision: 0));
            CreateIndex("dbo.Customer", "CreatedOnUtc", name: "IX_Customer_CreatedOn");
            CreateIndex("dbo.Customer", "LastActivityDateUtc", name: "IX_Customer_LastActivity");
            CreateIndex("dbo.Customer", "BirthDate", name: "IX_Customer_BirthDate");
            CreateIndex("dbo.Picture", new[] { "UpdatedOnUtc", "IsTransient" }, name: "IX_UpdatedOn_IsTransient");
            // CreateIndex("dbo.ProductVariantAttributeValue", "ProductVariantAttributeId", name: "IX_ProductVAV_ProductVAId_DO"); duplicate key
            //CreateIndex("dbo.ProductVariantAttributeValue", "Name"); cont index long text
            CreateIndex("dbo.ProductVariantAttributeValue", "DisplayOrder", name: "xxx");
            CreateIndex("dbo.Download", new[] { "UpdatedOnUtc", "IsTransient" }, name: "IX_UpdatedOn_IsTransient");
            CreateIndex("dbo.Forums_Post", "CreatedOnUtc");
            CreateIndex("dbo.Forums_Topic", new[] { "TopicTypeId", "LastPostTime" });
            CreateIndex("dbo.Forums_Topic", "CreatedOnUtc");
            CreateIndex("dbo.WalletHistory", new[] { "StoreId", "CreatedOnUtc" }, name: "IX_StoreId_CreatedOn");
            CreateIndex("dbo.ScheduleTaskHistory", new[] { "StartedOnUtc", "FinishedOnUtc" }, name: "IX_Started_Finished");
            CreateIndex("dbo.ScheduleTask", new[] { "NextRunUtc", "Enabled" }, name: "IX_NextRun_Enabled");
        }
        
        public override void Down()
        {
            DropIndex("dbo.ScheduleTask", "IX_NextRun_Enabled");
            DropIndex("dbo.ScheduleTaskHistory", "IX_Started_Finished");
            DropIndex("dbo.WalletHistory", "IX_StoreId_CreatedOn");
            DropIndex("dbo.Forums_Topic", new[] { "CreatedOnUtc" });
            DropIndex("dbo.Forums_Topic", new[] { "TopicTypeId", "LastPostTime" });
            DropIndex("dbo.Forums_Post", new[] { "CreatedOnUtc" });
            DropIndex("dbo.Download", "IX_UpdatedOn_IsTransient");
            DropIndex("dbo.ProductVariantAttributeValue", "xxx");
            DropIndex("dbo.ProductVariantAttributeValue", new[] { "Name" });
            DropIndex("dbo.ProductVariantAttributeValue", "IX_ProductVAV_ProductVAId_DO");
            DropIndex("dbo.Picture", "IX_UpdatedOn_IsTransient");
            DropIndex("dbo.Customer", "IX_Customer_BirthDate");
            DropIndex("dbo.Customer", "IX_Customer_LastActivity");
            DropIndex("dbo.Customer", "IX_Customer_CreatedOn");
            AlterColumn("dbo.BackInStockSubscription", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.ExportProfile", "ResultInfo", c => c.String());
            AlterColumn("dbo.ExportProfile", "ProviderConfigData", c => c.String());
            AlterColumn("dbo.ExportProfile", "Projection", c => c.String());
            AlterColumn("dbo.ExportProfile", "Filtering", c => c.String());
            AlterColumn("dbo.ExportDeployment", "ResultInfo", c => c.String());
            AlterColumn("dbo.SyncMapping", "SyncedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.SyncMapping", "CustomString", c => c.String());
            AlterColumn("dbo.ImportProfile", "ResultInfo", c => c.String());
            AlterColumn("dbo.ImportProfile", "ColumnMapping", c => c.String());
            AlterColumn("dbo.ImportProfile", "ExtraData", c => c.String());
            AlterColumn("dbo.ImportProfile", "FileTypeConfiguration", c => c.String());
            AlterColumn("dbo.Forums_PrivateMessage", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Forums_PrivateMessage", "Text", c => c.String(nullable: false));
            AlterColumn("dbo.Forums_Subscription", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.NewsLetterSubscription", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.MessageTemplate", "Body", c => c.String());
            AlterColumn("dbo.MessageTemplate", "LastModelTree", c => c.String());
            AlterColumn("dbo.Campaign", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Campaign", "Body", c => c.String(nullable: false));
            AlterColumn("dbo.Campaign", "Subject", c => c.String(nullable: false));
            AlterColumn("dbo.Campaign", "Name", c => c.String(nullable: false));
            AlterColumn("dbo.QueuedEmail", "SentOnUtc", c => c.DateTime());
            AlterColumn("dbo.QueuedEmail", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.QueuedEmail", "Body", c => c.String());
            AlterColumn("dbo.ScheduleTask", "NextRunUtc", c => c.DateTime());
            AlterColumn("dbo.ScheduleTaskHistory", "SucceededOnUtc", c => c.DateTime());
            AlterColumn("dbo.ScheduleTaskHistory", "FinishedOnUtc", c => c.DateTime());
            AlterColumn("dbo.ScheduleTaskHistory", "StartedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Currency", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Currency", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Store", "HtmlBodyId", c => c.String());
            AlterColumn("dbo.GenericAttribute", "Value", c => c.String(nullable: false));
            AlterColumn("dbo.ShippingMethod", "Description", c => c.String());
            AlterColumn("dbo.Log", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Log", "FullMessage", c => c.String());
            AlterColumn("dbo.ActivityLog", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.ActivityLog", "Comment", c => c.String(nullable: false));
            AlterColumn("dbo.RecurringPayment", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.RecurringPayment", "StartDateUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.RecurringPaymentHistory", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.CheckoutAttribute", "TextPrompt", c => c.String());
            AlterColumn("dbo.ShoppingCartItem", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.ShoppingCartItem", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.ShoppingCartItem", "AttributesXml", c => c.String());
            AlterColumn("dbo.ReturnRequest", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.ReturnRequest", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.ReturnRequest", "StaffNotes", c => c.String());
            AlterColumn("dbo.ReturnRequest", "CustomerComments", c => c.String());
            AlterColumn("dbo.ReturnRequest", "RequestedActionUpdatedOnUtc", c => c.DateTime());
            AlterColumn("dbo.ReturnRequest", "RequestedAction", c => c.String(nullable: false));
            AlterColumn("dbo.ReturnRequest", "ReasonForReturn", c => c.String(nullable: false));
            AlterColumn("dbo.WalletHistory", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Shipment", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Shipment", "DeliveryDateUtc", c => c.DateTime());
            AlterColumn("dbo.Shipment", "ShippedDateUtc", c => c.DateTime());
            AlterColumn("dbo.Shipment", "TrackingNumber", c => c.String());
            AlterColumn("dbo.RewardPointsHistory", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.RewardPointsHistory", "Message", c => c.String());
            AlterColumn("dbo.OrderNote", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.OrderNote", "Note", c => c.String(nullable: false));
            AlterColumn("dbo.OrderItem", "BundleData", c => c.String());
            AlterColumn("dbo.OrderItem", "AttributesXml", c => c.String());
            AlterColumn("dbo.OrderItem", "AttributeDescription", c => c.String());
            AlterColumn("dbo.GiftCard", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.GiftCard", "Message", c => c.String());
            AlterColumn("dbo.GiftCard", "SenderEmail", c => c.String());
            AlterColumn("dbo.GiftCard", "SenderName", c => c.String());
            AlterColumn("dbo.GiftCard", "RecipientEmail", c => c.String());
            AlterColumn("dbo.GiftCard", "RecipientName", c => c.String());
            AlterColumn("dbo.GiftCard", "GiftCardCouponCode", c => c.String());
            AlterColumn("dbo.GiftCardUsageHistory", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.DiscountUsageHistory", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Order", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Order", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Order", "ShippingRateComputationMethodSystemName", c => c.String());
            AlterColumn("dbo.Order", "ShippingMethod", c => c.String());
            AlterColumn("dbo.Order", "PaidDateUtc", c => c.DateTime());
            AlterColumn("dbo.Order", "PurchaseOrderNumber", c => c.String());
            AlterColumn("dbo.Order", "SubscriptionTransactionId", c => c.String());
            AlterColumn("dbo.Order", "CaptureTransactionResult", c => c.String());
            AlterColumn("dbo.Order", "CaptureTransactionId", c => c.String());
            AlterColumn("dbo.Order", "AuthorizationTransactionResult", c => c.String());
            AlterColumn("dbo.Order", "AuthorizationTransactionCode", c => c.String());
            AlterColumn("dbo.Order", "AuthorizationTransactionId", c => c.String());
            AlterColumn("dbo.Order", "CustomerOrderComment", c => c.String());
            AlterColumn("dbo.Order", "DirectDebitIban", c => c.String());
            AlterColumn("dbo.Order", "DirectDebitCountry", c => c.String());
            AlterColumn("dbo.Order", "DirectDebitBIC", c => c.String());
            AlterColumn("dbo.Order", "DirectDebitBankName", c => c.String());
            AlterColumn("dbo.Order", "DirectDebitBankCode", c => c.String());
            AlterColumn("dbo.Order", "DirectDebitAccountNumber", c => c.String());
            AlterColumn("dbo.Order", "DirectDebitAccountHolder", c => c.String());
            AlterColumn("dbo.Order", "CardExpirationYear", c => c.String());
            AlterColumn("dbo.Order", "CardExpirationMonth", c => c.String());
            AlterColumn("dbo.Order", "CardCvv2", c => c.String());
            AlterColumn("dbo.Order", "MaskedCreditCardNumber", c => c.String());
            AlterColumn("dbo.Order", "CardNumber", c => c.String());
            AlterColumn("dbo.Order", "CardName", c => c.String());
            AlterColumn("dbo.Order", "CardType", c => c.String());
            AlterColumn("dbo.Order", "CustomerIp", c => c.String());
            AlterColumn("dbo.Order", "CheckoutAttributesXml", c => c.String());
            AlterColumn("dbo.Order", "CheckoutAttributeDescription", c => c.String());
            AlterColumn("dbo.Order", "TaxRates", c => c.String());
            AlterColumn("dbo.Order", "VatNumber", c => c.String());
            AlterColumn("dbo.Order", "CustomerCurrencyCode", c => c.String());
            AlterColumn("dbo.Order", "PaymentMethodSystemName", c => c.String());
            AlterColumn("dbo.Order", "OrderNumber", c => c.String());
            AlterColumn("dbo.ExternalAuthenticationRecord", "ProviderSystemName", c => c.String());
            AlterColumn("dbo.ExternalAuthenticationRecord", "OAuthAccessToken", c => c.String());
            AlterColumn("dbo.ExternalAuthenticationRecord", "OAuthToken", c => c.String());
            AlterColumn("dbo.ExternalAuthenticationRecord", "ExternalDisplayIdentifier", c => c.String());
            AlterColumn("dbo.ExternalAuthenticationRecord", "ExternalIdentifier", c => c.String());
            AlterColumn("dbo.ExternalAuthenticationRecord", "Email", c => c.String());
            AlterColumn("dbo.News", "MetaDescription", c => c.String());
            AlterColumn("dbo.News", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.News", "EndDateUtc", c => c.DateTime());
            AlterColumn("dbo.News", "StartDateUtc", c => c.DateTime());
            AlterColumn("dbo.News", "Full", c => c.String(nullable: false));
            AlterColumn("dbo.News", "Short", c => c.String(nullable: false));
            AlterColumn("dbo.News", "Title", c => c.String(nullable: false));
            AlterColumn("dbo.Forums_Group", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Forums_Group", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Forums_Group", "Description", c => c.String());
            AlterColumn("dbo.Forums_Forum", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Forums_Forum", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Forums_Forum", "LastPostTime", c => c.DateTime());
            AlterColumn("dbo.Forums_Forum", "Description", c => c.String());
            AlterColumn("dbo.Forums_Topic", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Forums_Topic", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Forums_Topic", "LastPostTime", c => c.DateTime());
            AlterColumn("dbo.Forums_Post", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Forums_Post", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Forums_Post", "Text", c => c.String(nullable: false));
            AlterColumn("dbo.Download", "Changelog", c => c.String());
            AlterColumn("dbo.Download", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Download", "Extension", c => c.String());
            AlterColumn("dbo.Download", "Filename", c => c.String());
            AlterColumn("dbo.Download", "ContentType", c => c.String());
            AlterColumn("dbo.Download", "DownloadUrl", c => c.String());
            AlterColumn("dbo.ProductVariantAttributeValue", "Name", c => c.String());
            AlterColumn("dbo.ProductAttribute", "ExportMappings", c => c.String());
            AlterColumn("dbo.ProductAttribute", "Description", c => c.String());
            AlterColumn("dbo.ProductAttribute", "Name", c => c.String(nullable: false));
            AlterColumn("dbo.Product_ProductAttribute_Mapping", "TextPrompt", c => c.String());
            AlterColumn("dbo.ProductVariantAttributeCombination", "AttributesXml", c => c.String());
            AlterColumn("dbo.SpecificationAttribute", "Name", c => c.String(nullable: false));
            AlterColumn("dbo.SpecificationAttributeOption", "Name", c => c.String(nullable: false));
            AlterColumn("dbo.ProductBundleItem", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.ProductBundleItem", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.ProductBundleItem", "ShortDescription", c => c.String());
            AlterColumn("dbo.DiscountRequirement", "ExtraData", c => c.String());
            AlterColumn("dbo.DiscountRequirement", "RestrictedShippingOptions", c => c.String());
            AlterColumn("dbo.DiscountRequirement", "RestrictedPaymentMethods", c => c.String());
            AlterColumn("dbo.DiscountRequirement", "RestrictedProductIds", c => c.String());
            AlterColumn("dbo.DiscountRequirement", "DiscountRequirementRuleSystemName", c => c.String());
            AlterColumn("dbo.Manufacturer", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Manufacturer", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Manufacturer", "MetaDescription", c => c.String());
            AlterColumn("dbo.Manufacturer", "Description", c => c.String());
            AlterColumn("dbo.Picture", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Category", "DefaultViewMode", c => c.String());
            AlterColumn("dbo.Category", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Category", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Category", "MetaDescription", c => c.String());
            AlterColumn("dbo.Category", "BadgeText", c => c.String());
            AlterColumn("dbo.Category", "BottomDescription", c => c.String());
            AlterColumn("dbo.Category", "Description", c => c.String());
            AlterColumn("dbo.Discount", "EndDateUtc", c => c.DateTime());
            AlterColumn("dbo.Discount", "StartDateUtc", c => c.DateTime());
            AlterColumn("dbo.Product", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Product", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Product", "AvailableEndDateTimeUtc", c => c.DateTime());
            AlterColumn("dbo.Product", "AvailableStartDateTimeUtc", c => c.DateTime());
            AlterColumn("dbo.Product", "SpecialPriceEndDateTimeUtc", c => c.DateTime());
            AlterColumn("dbo.Product", "SpecialPriceStartDateTimeUtc", c => c.DateTime());
            AlterColumn("dbo.Product", "UserAgreementText", c => c.String());
            AlterColumn("dbo.Product", "MetaDescription", c => c.String());
            AlterColumn("dbo.Product", "AdminComment", c => c.String());
            AlterColumn("dbo.Product", "FullDescription", c => c.String());
            AlterColumn("dbo.Product", "ShortDescription", c => c.String());
            AlterColumn("dbo.BlogPost", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.BlogPost", "MetaDescription", c => c.String());
            AlterColumn("dbo.BlogPost", "EndDateUtc", c => c.DateTime());
            AlterColumn("dbo.BlogPost", "StartDateUtc", c => c.DateTime());
            AlterColumn("dbo.BlogPost", "Tags", c => c.String());
            AlterColumn("dbo.BlogPost", "Body", c => c.String(nullable: false));
            AlterColumn("dbo.BlogPost", "Title", c => c.String(nullable: false));
            AlterColumn("dbo.Country", "AddressFormat", c => c.String());
            AlterColumn("dbo.Address", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Address", "FaxNumber", c => c.String());
            AlterColumn("dbo.Address", "PhoneNumber", c => c.String());
            AlterColumn("dbo.Address", "ZipPostalCode", c => c.String());
            AlterColumn("dbo.Address", "Address2", c => c.String());
            AlterColumn("dbo.Address", "Address1", c => c.String());
            AlterColumn("dbo.Address", "City", c => c.String());
            AlterColumn("dbo.Address", "Company", c => c.String());
            AlterColumn("dbo.Address", "Email", c => c.String());
            AlterColumn("dbo.Address", "LastName", c => c.String());
            AlterColumn("dbo.Address", "FirstName", c => c.String());
            AlterColumn("dbo.Address", "Title", c => c.String());
            AlterColumn("dbo.Address", "Salutation", c => c.String());
            AlterColumn("dbo.Customer", "BirthDate", c => c.DateTime());
            AlterColumn("dbo.Customer", "LastActivityDateUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Customer", "LastLoginDateUtc", c => c.DateTime());
            AlterColumn("dbo.Customer", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.Customer", "AdminComment", c => c.String());
            AlterColumn("dbo.NewsComment", "CommentText", c => c.String());
            AlterColumn("dbo.NewsComment", "CommentTitle", c => c.String());
            AlterColumn("dbo.ProductReview", "ReviewText", c => c.String());
            AlterColumn("dbo.ProductReview", "Title", c => c.String());
            AlterColumn("dbo.BlogComment", "CommentText", c => c.String());
            AlterColumn("dbo.CustomerContent", "UpdatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.CustomerContent", "CreatedOnUtc", c => c.DateTime(nullable: false));
            AlterColumn("dbo.PollAnswer", "Name", c => c.String(nullable: false));
            AlterColumn("dbo.Poll", "EndDateUtc", c => c.DateTime());
            AlterColumn("dbo.Poll", "StartDateUtc", c => c.DateTime());
            AlterColumn("dbo.Poll", "SystemKeyword", c => c.String());
            AlterColumn("dbo.Poll", "Name", c => c.String(nullable: false));
            AlterColumn("dbo.PermissionRecord", "Name", c => c.String(nullable: false));
            AlterColumn("dbo.LocaleStringResource", "ResourceValue", c => c.String(nullable: false));
            AlterColumn("dbo.LocalizedProperty", "LocaleValue", c => c.String(nullable: false));
            AlterColumn("dbo.Setting", "Value", c => c.String(nullable: false));
            AlterColumn("dbo.Topic", "TitleTag", c => c.String());
            AlterColumn("dbo.Topic", "WidgetZone", c => c.String());
            AlterColumn("dbo.Topic", "MetaTitle", c => c.String());
            AlterColumn("dbo.Topic", "MetaDescription", c => c.String());
            AlterColumn("dbo.Topic", "MetaKeywords", c => c.String());
            AlterColumn("dbo.Topic", "Body", c => c.String());
            AlterColumn("dbo.Topic", "Title", c => c.String());
            AlterColumn("dbo.Topic", "Password", c => c.String());
            AlterColumn("dbo.Topic", "SystemName", c => c.String());
            CreateIndex("dbo.ScheduleTask", new[] { "NextRunUtc", "Enabled" }, name: "IX_NextRun_Enabled");
            CreateIndex("dbo.ScheduleTaskHistory", new[] { "StartedOnUtc", "FinishedOnUtc" }, name: "IX_Started_Finished");
            CreateIndex("dbo.WalletHistory", new[] { "StoreId", "CreatedOnUtc" }, name: "IX_StoreId_CreatedOn");
            CreateIndex("dbo.Forums_Topic", "CreatedOnUtc");
            CreateIndex("dbo.Forums_Topic", new[] { "TopicTypeId", "LastPostTime" });
            CreateIndex("dbo.Forums_Post", "CreatedOnUtc");
            CreateIndex("dbo.Download", new[] { "UpdatedOnUtc", "IsTransient" }, name: "IX_UpdatedOn_IsTransient");
            CreateIndex("dbo.ProductVariantAttributeValue", "Name");
            CreateIndex("dbo.ProductVariantAttributeValue", new[] { "ProductVariantAttributeId", "DisplayOrder" }, name: "IX_ProductVariantAttributeValue_ProductVariantAttributeId_DisplayOrder");
            CreateIndex("dbo.Picture", new[] { "UpdatedOnUtc", "IsTransient" }, name: "IX_UpdatedOn_IsTransient");
            CreateIndex("dbo.Customer", "BirthDate", name: "IX_Customer_BirthDate");
            CreateIndex("dbo.Customer", "LastActivityDateUtc", name: "IX_Customer_LastActivity");
            CreateIndex("dbo.Customer", "CreatedOnUtc", name: "IX_Customer_CreatedOn");
        }
    }
}
